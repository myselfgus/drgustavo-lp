---
export interface Props {
  title: string;
  excerpt: string;
  href: string;
  publishedAt: Date;
  tags?: string[];
  image?: string;
  imageAlt?: string;
}

const {
  title,
  excerpt,
  href,
  publishedAt,
  tags = [],
  image,
  imageAlt = ''
} = Astro.props;

const formattedDate = new Intl.DateTimeFormat('pt-BR', {
  day: 'numeric',
  month: 'short',
  year: 'numeric'
}).format(publishedAt);
---

<article class="blog-card" data-animate="fade-up">
  <a class="blog-card__link" href={href}>
    {image ? (
      <figure class="blog-card__media">
        <img src={image} alt={imageAlt || title} loading="lazy" />
      </figure>
    ) : (
      <div class="blog-card__placeholder" aria-hidden="true"></div>
    )}

    <div class="blog-card__body">
      <time datetime={publishedAt.toISOString()} class="blog-card__date">{formattedDate}</time>
      <h2 class="blog-card__title">{title}</h2>
      <p class="blog-card__excerpt">{excerpt}</p>

      {tags.length > 0 && (
        <ul class="blog-card__tags" aria-label="Tags do artigo">
          {tags.slice(0, 4).map(tag => (
            <li class="blog-card__tag">{tag}</li>
          ))}
        </ul>
      )}
    </div>
  </a>
</article>

<style>
  .blog-card {
    position: relative;
    border: 1px solid rgba(31, 62, 70, 0.1);
    border-radius: 8px;
    overflow: hidden;
    background: rgba(255, 255, 255, 0.9);
    box-shadow: 0 4px 12px rgba(18, 19, 16, 0.06);
    transition: transform 0.25s ease, box-shadow 0.25s ease, border-color 0.25s ease;
    will-change: transform;
  }

  .blog-card:hover {
    transform: translateY(-3px);
    border-color: rgba(31, 62, 70, 0.15);
    box-shadow: 0 10px 20px rgba(18, 19, 16, 0.09);
  }

  .blog-card__link {
    display: grid;
    grid-template-rows: auto 1fr;
    height: 100%;
    text-decoration: none;
    color: inherit;
  }

  .blog-card__media {
    aspect-ratio: 1.5 / 1;
    margin: 0;
    overflow: hidden;
    background: linear-gradient(135deg, rgba(125, 168, 123, 0.18), rgba(31, 62, 70, 0.06));
  }

  .blog-card__media img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    transition: transform 0.45s ease;
  }

  .blog-card:hover .blog-card__media img {
    transform: scale(1.03);
  }

  .blog-card__placeholder {
    aspect-ratio: 16 / 9;
    background: linear-gradient(120deg, rgba(240, 246, 243, 0.8), rgba(125, 168, 123, 0.15));
  }

  .blog-card__body {
    padding: 16px 18px;
    display: grid;
    gap: 10px;
  }

  .blog-card__date {
    font-size: 0.8rem;
    font-family: var(--font-mono, 'IBM Plex Mono', monospace);
    color: rgba(31, 62, 70, 0.7);
    letter-spacing: 0.02em;
    text-transform: uppercase;
  }

  .blog-card__title {
    margin: 0;
    font-size: 1.1rem;
    line-height: 1.22;
    font-weight: 500;
    color: var(--text-primary, #1A1A1A);
  }

  .blog-card__excerpt {
    margin: 0;
    font-size: 0.88rem;
    line-height: 1.5;
    color: var(--text-secondary, #5c615c);
  }

  .blog-card__tags {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin: 0;
    padding: 0;
    list-style: none;
  }

  .blog-card__tag {
    padding: 4px 10px;
    border-radius: 999px;
    font-size: 0.7rem;
    font-weight: 500;
    background: rgba(31, 62, 70, 0.07);
    color: rgba(31, 62, 70, 0.72);
    text-transform: lowercase;
  }

  @media (max-width: 768px) {
    .blog-card__body {
      padding: 14px 16px;
      gap: 8px;
    }

    .blog-card__title {
      font-size: 1.05rem;
    }

    .blog-card__excerpt {
      font-size: 0.82rem;
    }
  }
</style>
