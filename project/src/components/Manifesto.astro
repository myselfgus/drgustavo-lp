---
// Manifesto section - Seção 2
---

<section id="manifesto" class="manifesto-section">
  <div class="manifesto-container">
    <!-- Lado Esquerdo - Texto -->
    <div class="manifesto-content">
      <!-- Par 1 -->
      <div class="manifesto-pair">
        <p class="line-1">A psiquiatria tradicional categoriza.</p>
        <p class="line-2">Eu busco compreender padrões.</p>
      </div>

      <!-- Par 2 -->
      <div class="manifesto-pair">
        <p class="line-1">Consultas de 2 horas não são luxo.</p>
        <p class="line-2">São o tempo necessário para <strong>pensar junto</strong>.</p>
      </div>

      <!-- Par 3 -->
      <div class="manifesto-pair">
        <p class="line-1">Inteligência artificial não substitui escuta.</p>
        <p class="line-2">Ela libera minha mente para <strong>estar presente</strong>.</p>
      </div>

      <!-- Par 4 -->
      <div class="manifesto-pair">
        <p class="line-1">Você não é um diagnóstico do DSM.</p>
        <p class="line-2">Você é um <strong>sistema complexo</strong> em busca de coerência.</p>
      </div>

      <!-- Link Blog -->
      <a href="/blog" class="blog-link">
        Leia mais sobre essa abordagem no blog →
      </a>
    </div>

    <!-- Lado Direito - Vazio Elegante -->
    <div class="manifesto-visual" aria-hidden="true"></div>
  </div>
</section>

<style>
  /* Section Layout */
  .manifesto-section {
    position: relative;
    min-height: 100vh;
    height: 100vh;
    background-color: #FFFFFF;
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  .manifesto-container {
    width: 100%;
    height: 100%;
    display: flex;
  }

  /* Lado Esquerdo - 50% */
  .manifesto-content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 15% 8% 10% 8%;
  }

  /* Lado Direito - 50% */
  .manifesto-visual {
    flex: 1;
    background: linear-gradient(135deg, #F5F5F5 0%, #FFFFFF 100%);
    position: relative;
  }

  /* Noise texture sutil */
  .manifesto-visual::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
    opacity: 0.02;
    pointer-events: none;
  }

  /* Pares */
  .manifesto-pair {
    margin-bottom: var(--gap-manifesto-pairs);
  }

  .manifesto-pair.visible .line-1 {
    animation: fadeInUp 600ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    animation-delay: 0ms;
  }

  .manifesto-pair.visible .line-2 {
    animation: fadeInUp 600ms cubic-bezier(0.16, 1, 0.3, 1) forwards;
    animation-delay: 200ms;
  }

  /* Tipografia - Linha 1 (problema) */
  .line-1 {
    margin: 0;
    font-family: var(--font-sans);
    font-size: var(--text-manifesto);
    font-weight: var(--font-light);
    color: var(--color-text-secondary);
    line-height: 1.5;
    margin-bottom: var(--gap-manifesto-pair-lines);
  }

  /* Tipografia - Linha 2 (solução) */
  .line-2 {
    margin: 0;
    font-family: var(--font-sans);
    font-size: var(--text-manifesto);
    font-weight: var(--font-medium);
    color: var(--color-text-primary);
    line-height: 1.5;
  }

  .line-2 strong {
    font-weight: var(--font-semibold);
  }

  /* Link Blog */
  .blog-link {
    margin-top: 80px;
    font-size: var(--text-base);
    font-weight: var(--font-regular);
    color: var(--color-text-secondary);
    text-decoration: none;
    transition: all 200ms ease;
    opacity: 0;
    display: inline-block;
  }

  .blog-link.visible {
    animation: fadeIn 400ms ease-out forwards;
    animation-delay: 400ms;
  }

  .blog-link:hover {
    color: var(--color-text-primary);
    text-decoration: underline;
    transform: translateX(4px);
  }

  /* Responsive - Tablet */
  @media (min-width: 768px) and (max-width: 1023px) {
    .manifesto-content {
      padding: 15% 6% 10% 6%;
    }
  }

  /* Responsive - Mobile */
  @media (max-width: 767px) {
    .manifesto-section {
      min-height: 100svh;
      height: 100svh;
    }

    .manifesto-container {
      flex-direction: column;
    }

    .manifesto-content {
      flex: 1;
      padding: 24px;
      justify-content: flex-start;
      padding-top: 120px;
    }

    .manifesto-visual {
      display: none;
    }

    .blog-link {
      margin-top: 60px;
    }
  }

  /* Accessibility - Reduced Motion */
  @media (prefers-reduced-motion: reduce) {
    .manifesto-pair,
    .blog-link {
      animation: none !important;
      opacity: 1 !important;
      transform: none !important;
    }

    .line-1,
    .line-2 {
      animation: none !important;
      opacity: 1 !important;
      transform: none !important;
    }
  }
</style>

<script>
  function setupManifestoAnimations() {
    const manifestoSection = document.getElementById('manifesto');
    if (!manifestoSection) return;

    const pairs = manifestoSection.querySelectorAll('.manifesto-pair');
    const blogLink = manifestoSection.querySelector('.blog-link');

    // IntersectionObserver para cada par
    const pairObserver = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      },
      {
        threshold: 0.2,
        rootMargin: '0px 0px -100px 0px',
      }
    );

    pairs.forEach((pair) => pairObserver.observe(pair));

    // Observer para blog link (trigger quando último par está visível)
    const lastPair = pairs[pairs.length - 1];
    const blogLinkObserver = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting && blogLink) {
            setTimeout(() => {
              blogLink.classList.add('visible');
            }, 600);
          }
        });
      },
      {
        threshold: 0.5,
      }
    );

    if (lastPair) {
      blogLinkObserver.observe(lastPair);
    }
  }

  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', setupManifestoAnimations);
  } else {
    setupManifestoAnimations();
  }
</script>
