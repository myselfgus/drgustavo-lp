---
import '../styles/sections/hero.css';

const heroHighlights = [
  'Consultas de 120 minutos',
  'IA como aliada discreta'
];

const heroQuotesData = [
  {
    text: '“Ele traduziu meu padrão de pensamento em um plano que finalmente fez sentido para mim e para minha família.”',
    author: 'Paciente acompanhado desde 2023'
  },
  {
    text: '“Consultas longas, informes claros e ajustes em tempo real. Senti pela primeira vez que eu comandava o processo.”',
    author: 'Profissional de tecnologia, 34 anos'
  },
  {
    text: '“Tive acompanhamento responsável com canabidiol, com ciência e sem promessas fáceis.”',
    author: 'Paciente com dor crônica, 52 anos'
  }
];

const [initialHeroQuote] = heroQuotesData;

const heroPortraitBase = 'https://imagedelivery.net/ZSVIzNe6GQZrE_DQQqHAyw/bcfa1ef0-4dcd-4338-7372-95f086aa7900/public';
const heroPortraitSrcset = [320, 480, 640, 820, 1024]
  .map(size => `${heroPortraitBase}?width=${size}&height=${size}&fit=cover&gravity=face&quality=85 ${size}w`)
  .join(', ');
const heroPortraitSizes = '(min-width: 1024px) 320px, 60vw';
---

<section id="hero" class="hero" aria-labelledby="hero-title">
  <div class="hero__background" aria-hidden="true">
    <span class="hero__halo hero__halo--one"></span>
    <span class="hero__halo hero__halo--two"></span>
    <span class="hero__mesh"></span>
  </div>

  <div class="hero__content container">
    <div class="hero__grid">
      <div class="hero__copy">
        <span class="hero__eyebrow" data-animate="fade-right">Psiquiatria humanizada guiada por dados</span>

        <h1 id="hero-title" class="hero__title" data-animate="fade-right">
          <span class="hero__line hero__line--light">Você não precisa de mais diagnósticos.</span>
          <span class="hero__line hero__line--bold">Você precisa se entender.</span>
        </h1>

        <div class="hero__identity" data-animate="fade-right">
          <span class="hero__name">Dr. Gustavo Mendes e Silva</span>
          <span class="hero__context">Psiquiatria · São José do Rio Preto</span>
        </div>

        <p class="hero__lead" data-animate="fade-right">
          Consultas de 2 horas. Tecnologia discreta. Planos vivos construídos juntos.
        </p>

        <div class="hero__highlights" data-stagger>
          {heroHighlights.map(item => (
            <span class="hero__highlight">{item}</span>
          ))}
        </div>

        <div class="hero__actions">
          <button
            class="hero__cta"
            data-cal-namespace="primeira-consulta"
            data-cal-link="drgustavomendes/primeira-consulta"
            data-cal-config='{"layout":"month_view"}'
            data-animate="fade-right"
            aria-label="Agendar consulta"
          >
            Agendar consulta
          </button>
        </div>
      </div>

      <aside class="hero__media" aria-hidden="true">
        <div class="hero__frame" data-animate="fade-left">
          <div class="hero__portrait">
            <img
              src={`${heroPortraitBase}?width=640&height=640&fit=cover&gravity=face&quality=90`}
              srcset={heroPortraitSrcset}
              sizes={heroPortraitSizes}
              alt="Retrato do Dr. Gustavo Mendes e Silva"
              loading="eager"
              decoding="async"
            />
          </div>
          <span class="hero__ring hero__ring--outer"></span>
          <span class="hero__ring hero__ring--inner"></span>
        </div>

        <figure class="hero__quote" data-animate="fade-left" aria-live="polite">
          <blockquote data-hero-quote>{initialHeroQuote.text}</blockquote>
          <figcaption data-hero-author>{initialHeroQuote.author}</figcaption>
        </figure>
      </aside>
    </div>
  </div>

  <button
    class="hero__scroll"
    type="button"
    data-scroll-target="manifesto"
    aria-label="Ir para o manifesto"
    data-animate="fade-up"
  >
    <span class="hero__scroll-icon" aria-hidden="true">⌄</span>
    <span class="hero__scroll-text">ver manifesto</span>
  </button>
</section>

<script define:vars={{ heroQuotes: heroQuotesData }} is:inline>
  if (window.matchMedia('(min-width: 768px)').matches) {
    const heroSection = document.getElementById('hero');

    if (heroSection) {
      const scrollButton = heroSection.querySelector('[data-scroll-target]');
      const quoteFigure = heroSection.querySelector('.hero__quote');
      const quoteText = heroSection.querySelector('[data-hero-quote]');
      const quoteAuthor = heroSection.querySelector('[data-hero-author]');

      if (quoteFigure && quoteText && quoteAuthor && heroQuotes.length > 1) {
        let quoteIndex = 0;
        const swapDuration = 260;
        const swapInterval = 8000;

        window.setInterval(() => {
          quoteFigure.classList.add('is-swapping');

          window.setTimeout(() => {
            quoteIndex = (quoteIndex + 1) % heroQuotes.length;
            const nextQuote = heroQuotes[quoteIndex];
            quoteText.textContent = nextQuote.text;
            quoteAuthor.textContent = nextQuote.author;
            quoteFigure.classList.remove('is-swapping');
          }, swapDuration);
        }, swapInterval);
      }

      if (scrollButton) {
        const targetId = scrollButton.getAttribute('data-scroll-target');
        scrollButton.addEventListener('click', () => {
          if (!targetId) return;
          const nextSection = document.getElementById(targetId);
          if (nextSection) {
            nextSection.scrollIntoView({ behavior: 'smooth' });
          }
        });

        let hasHidden = false;
        window.addEventListener('scroll', () => {
          if (hasHidden) return;
          if (window.scrollY > 80) {
            hasHidden = true;
            scrollButton.classList.add('hero__scroll--hidden');
          }
        });
      }
    }
  }
</script>
